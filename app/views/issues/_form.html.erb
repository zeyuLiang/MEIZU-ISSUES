<div class="form-content">
  <div class="row-fluid">

    <div>
      <% if @issue.safe_attribute? 'project_id' %>
        <% select_option = disabled_for_form_elements ? %>
        <% {:disabled => true} : %>
        <% {:onchange => "updateIssueFrom('#{escape_javascript project_issue_form_path(@project, :id => @issue, :format => 'js')}')"} %>
      <p><%= f.select :project_id, project_options_for_select(find_visible_projects, :selected => @issue.project), {:required => true}, select_option %></p>
      <% end %>
    </div>

    <div>
        <% if @issue.safe_attribute? 'subject' %>
          <%= f.text_field :subject, required: true, placeholder: l(:field_subject) %>
        <% end %>
    </div>

    <div id="attributes" class="attributes">
      <%= render :partial => 'issues/attributes' %>
    </div>

    <div>
      <% if @issue.safe_attribute? 'description' %>
      <p>
        <%= content_tag 'span', :id => "issue_description_and_toolbar" do %>
          <%= f.text_area :description,
                         placeholder: l(:field_description),
                         rows: '3',
                         class: 'wiki-edit span24 hasAt hasAtTopic' %>
        <% end %>
      </p>
      <% end %>
    </div>

    <%= labelled_fields_for :issue, @issue do |f| %>
    <%= call_hook(:view_issues_form_details_top, { :issue => @issue, :form => f }) %>

    <!--<%= f.hidden_field :tracker_id, value: @issue.project.trackers.first.id %>-->


    <%= call_hook(:view_issues_form_details_bottom, { :issue => @issue, :form => f }) %>
    <% end %>
  </div>
</div>


<% if false %>
<script type="text/javascript">
  var blobs = new Array();
  $('#issue_description').bind('paste',function(event){
    event.clipboardData = event.originalEvent.clipboardData;
    if(!event.clipboardData){
      return;
    }
    Array.prototype.forEach.call(
      event.clipboardData.types,function(type,i){
      if(event.clipboardData.items[i].type.match(/image.*/)){
        var blob = event.clipboardData.items[i].getAsFile();
        var path = event.clipboardData.getData("text/plain");
        var blobitem = {};
        path = path.split("/");
        blob.webkitRelativePath="";
        blob.name = path[path.length-1];
      
        blobitem.name = "attachments[" + fileFieldCount + "][file]";
        blobitem.value = blob;
        blobs.push(blobitem);
        
        addFileNameDiv(blob.name);        

        fileFieldCount++;
        }
      }
    )
  });

  $("#issue-form").submit(function(){
    var formobj = document.getElementById("issue-form");
    var formdata = new FormData(formobj);
    while(blobs.length != 0) {
      var blobitem = blobs.shift();
      formdata.append(blobitem.name,blobitem.value,blobitem.value.name);
    }
    $.ajax({
      url: $(this).attr("action"),
      type: "POST",
      data: formdata,
      dataType: "script",
      processData: false,  // tell jQuery not to process the data
      contentType: false,   // tell jQuery not to set contentType
      success: function(){
        $('#container-modal').modal('hide');
        $('#container-modal').remove();
      }
    });
    return false;
  });
  
</script>
<% end %>